{"ast":null,"code":"import{createApi,fetchBaseQuery}from\"@reduxjs/toolkit/query/react\";export var contactsApi=createApi({reducerPath:\"contactsApi\",baseQuery:fetchBaseQuery({baseUrl:\"https://62da7933e56f6d82a7628abf.mockapi.io/contacts/\"}),endpoints:function endpoints(build){return{fetchContacts:build.query({query:function query(){return\"contacts\";}}),deleteContact:build.mutation({query:function query(contactId){return{url:\"/contacts/\".concat(contactId),method:\"DELETE\"};}}),addContact:build.mutation({query:function query(newContact){return{url:\"/contacts\",method:\"POST\",body:newContact};}})};}});var useFetchContactsQuery=contactsApi.useFetchContactsQuery,useDeleteContactMutation=contactsApi.useDeleteContactMutation,useAddContactMutation=contactsApi.useAddContactMutation;export{useFetchContactsQuery,useDeleteContactMutation,useAddContactMutation};","map":{"version":3,"sources":["/Users/leo/Desktop/IT/projects/goit-react-hw-07-phonebook1/src/redux/contacts/contactsApi.js"],"names":["createApi","fetchBaseQuery","contactsApi","reducerPath","baseQuery","baseUrl","endpoints","build","fetchContacts","query","deleteContact","mutation","contactId","url","method","addContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,cAApB,KAA0C,8BAA1C,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGF,SAAS,CAAC,CACnCG,WAAW,CAAE,aADsB,CAEnCC,SAAS,CAAEH,cAAc,CAAC,CACxBI,OAAO,CAAE,uDADe,CAAD,CAFU,CAKnCC,SAAS,CAAE,mBAACC,KAAD,QAAY,CACrBC,aAAa,CAAED,KAAK,CAACE,KAAN,CAAY,CACzBA,KAAK,CAAE,mCADkB,CAAZ,CADM,CAIrBC,aAAa,CAAEH,KAAK,CAACI,QAAN,CAAe,CAC5BF,KAD4B,gBACtBG,SADsB,CACX,CACf,MAAO,CACLC,GAAG,qBAAeD,SAAf,CADE,CAELE,MAAM,CAAE,QAFH,CAAP,CAID,CAN2B,CAAf,CAJM,CAYrBC,UAAU,CAAER,KAAK,CAACI,QAAN,CAAe,CACzBF,KADyB,gBACnBO,UADmB,CACP,CAChB,MAAO,CAAEH,GAAG,CAAE,WAAP,CAAoBC,MAAM,CAAE,MAA5B,CAAoCG,IAAI,CAAED,UAA1C,CAAP,CACD,CAHwB,CAAf,CAZS,CAAZ,EALwB,CAAD,CAA7B,CAyBA,GAAQE,CAAAA,qBAAR,CAAmFhB,WAAnF,CAAQgB,qBAAR,CAA+BC,wBAA/B,CAAmFjB,WAAnF,CAA+BiB,wBAA/B,CAAyDC,qBAAzD,CAAmFlB,WAAnF,CAAyDkB,qBAAzD,C","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactsApi = createApi({\n  reducerPath: \"contactsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://62da7933e56f6d82a7628abf.mockapi.io/contacts/\",\n  }),\n  endpoints: (build) => ({\n    fetchContacts: build.query({\n      query: () => `contacts`,\n    }),\n    deleteContact: build.mutation({\n      query(contactId) {\n        return {\n          url: `/contacts/${contactId}`,\n          method: \"DELETE\",\n        };\n      },\n    }),\n    addContact: build.mutation({\n      query(newContact) {\n        return { url: \"/contacts\", method: \"POST\", body: newContact };\n      },\n    }),\n  }),\n});\n\nexport const { useFetchContactsQuery, useDeleteContactMutation, useAddContactMutation } = contactsApi;\n\n"]},"metadata":{},"sourceType":"module"}